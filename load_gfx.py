import romfile, palette
from twobpp import gfx_2_image, convert_tile_from_bitplanes

def load_gfx(rom, idxs, gfx_info_tbl=0x786e0):
    gfx = [0]*0x2000
    for idx in idxs:
        rom.seek(gfx_info_tbl+idx*7)
        gfx_ptr = rom.read_int(1)*0x10000+rom.read_int(2)
        ppu_ptr = rom.read_int(2)
        size = rom.read_int(2)

        rom.seek(gfx_ptr)
        gfx[ppu_ptr^0x1000:(ppu_ptr^0x1000)+size] = [rom.read_int(1) for _ in range(size)]
    return gfx

if __name__ == '__main__':
    rom = romfile.ROMFile('M1.nes')

    area_data = [
        (
            'title',
            [0x0F, 0x28, 0x18, 0x08, 0x0F, 0x29, 0x1B, 0x1A, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F,
             0x0F, 0x16, 0x1A, 0x27, 0x0F, 0x37, 0x3A, 0x1B, 0x0F, 0x17, 0x31, 0x37, 0x0F, 0x32, 0x22, 0x12],
            [0x15, 0x00, 0x14, 0x17, 0x18, 0x19, 0x16]
        ),
        (
            'ending',
            [0x0F, 0x21, 0x11, 0x02, 0x0F, 0x29, 0x1B, 0x1A, 0x0F, 0x27, 0x28, 0x29, 0x0F, 0x28, 0x18, 0x08,
             0x0F, 0x16, 0x19, 0x27, 0x0F, 0x36, 0x15, 0x17, 0x0F, 0x12, 0x21, 0x20, 0x0F, 0x35, 0x12, 0x16],
            [0x15, 0x14, 0x17, 0x18, 0x19, 0x16, 0x01, 0x02]
        ),
        (
            'brinstar',
            [0x0F, 0x22, 0x12, 0x1C, 0x0F, 0x22, 0x12, 0x1C, 0x0F, 0x27, 0x11, 0x07, 0x0F, 0x22, 0x12, 0x1C,
             0x0F, 0x16, 0x19, 0x27, 0x0F, 0x12, 0x30, 0x21, 0x0F, 0x27, 0x2A, 0x3C, 0x0F, 0x15, 0x21, 0x38],
            [0x00, 0x14, 0x17, 0x18, 0x19, 0x16, 0x03, 0x04, 0x05, 0x06]
        ),
        (
            'norfair',
            [0x0F, 0x20, 0x10, 0x00, 0x0F, 0x28, 0x16, 0x04, 0x0F, 0x16, 0x11, 0x04, 0x0F, 0x31, 0x13, 0x15,
             0x0F, 0x16, 0x19, 0x27, 0x0F, 0x12, 0x30, 0x21, 0x0F, 0x14, 0x23, 0x2C, 0x0F, 0x16, 0x24, 0x37],
            [0x00, 0x14, 0x17, 0x18, 0x19, 0x16, 0x04, 0x05, 0x07, 0x08, 0x09]
        ),
        (
            'tourian',
            [0x0F, 0x20, 0x16, 0x00, 0x0F, 0x20, 0x11, 0x00, 0x0F, 0x16, 0x20, 0x00, 0x0F, 0x20, 0x10, 0x00,
             0x0F, 0x16, 0x19, 0x27, 0x0F, 0x12, 0x30, 0x21, 0x0F, 0x27, 0x16, 0x30, 0x0F, 0x16, 0x2A, 0x37],
            [0x00, 0x14, 0x17, 0x18, 0x19, 0x16, 0x05, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x1A, 0x1C]
        ),
        (
            'kraid',
            [0x0F, 0x20, 0x10, 0x00, 0x0F, 0x28, 0x19, 0x1A, 0x0F, 0x28, 0x16, 0x04, 0x0F, 0x23, 0x11, 0x02,
             0x0F, 0x16, 0x19, 0x27, 0x0F, 0x12, 0x30, 0x21, 0x0F, 0x27, 0x1B, 0x36, 0x0F, 0x17, 0x22, 0x31],
            [0x00, 0x14, 0x17, 0x18, 0x19, 0x16, 0x04, 0x05, 0x0A, 0x0F, 0x10, 0x11]
        ),
        (
            'ridley',
            [0x0F, 0x20, 0x10, 0x00, 0x0F, 0x21, 0x14, 0x13, 0x0F, 0x28, 0x1B, 0x02, 0x0F, 0x15, 0x16, 0x04,
             0x0F, 0x16, 0x19, 0x27, 0x0F, 0x12, 0x30, 0x21, 0x0F, 0x14, 0x13, 0x29, 0x0F, 0x13, 0x15, 0x27],
            [0x00, 0x14, 0x17, 0x18, 0x19, 0x16, 0x04, 0x05, 0x0A, 0x12, 0x13]
        )
    ]

    for area_name, pal_idxs, gfx_idxs in area_data:
        pal = palette.convert_palette(pal_idxs, 'palette.pal')
        gfx = load_gfx(rom, gfx_idxs)

        bg_image = gfx_2_image(gfx[:0x1000])
        bg_image.putpalette(pal[:4*4], 'RGBA')
        bg_image.save(f'out/{area_name}_bg.png')
        bg_chr = open(f'out/{area_name}_bg.chr', 'wb')
        bg_chr.write(bytes(gfx[:0x1000]))

        spr_image = gfx_2_image(gfx[0x1000:])
        spr_image.putpalette(pal[0x18*4:0x1C*4], 'RGBA')
        spr_image.save(f'out/{area_name}_spr.png')
        spr_chr = open(f'out/{area_name}_spr.chr', 'wb')
        spr_chr.write(bytes(gfx[0x1000:]))
